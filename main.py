# -*- coding: utf-8 -*-
"""Main.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1j8vlkkpYH6jhPpWGdbwmFmV5NnNAslcA
"""

from sklearn.datasets import fetch_20newsgroups
# from nltk.tokenize import word_tokenize #Used to extract words from documents
# from nltk.stem import WordNetLemmatizer #Used to lemmatize words
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.pipeline import make_pipeline
from sklearn.preprocessing import Normalizer
from sklearn import metrics
from gensim.models import Word2Vec
from sklearn.cluster import KMeans
import matplotlib.pyplot as plt

import sys
from time import time

import pandas as pd
import numpy as np
import nltk
import re
from nltk.corpus import stopwords
from nltk.tokenize import word_tokenize
from nltk.stem import PorterStemmer
import seaborn as sns
from sklearn.metrics import silhouette_score
from collections import Counter
from sklearn.cluster import AgglomerativeClustering

from sklearn.decomposition import PCA
from sklearn.manifold import TSNE
import matplotlib.pyplot as plt
from scipy.cluster.hierarchy import dendrogram, linkage

import preprocessing.py
import vectorization.py
import clustering.py
import evaluation.py

def main():
    # Load the 20 Newsgroups dataset
    categories = [
        'talk.religion.misc',
        'comp.graphics',
        'sci.space',
    ]

    print("Loading 20 newsgroups dataset for categories:")
    print(categories)

    news_data = fetch_20newsgroups(subset='all', categories=categories,
                                   shuffle=False, remove=('headers', 'footers', 'quotes'))




    processed_news_data = [preprocess_text(doc) for doc in news_data.data]



    features_news = extract_features_bert(processed_news_data)



    scaled_features_news = scale_features(features_news)



    reduced_features_news = reduce_dimensions(scaled_features_news)



    labels_news = apply_kmeans(reduced_features_news, n_clusters=3)



    score_news = evaluate_clustering(labels_news, reduced_features_news)


    print(f"Silhouette Score for 20 Newsgroups Dataset: {score_news}")





